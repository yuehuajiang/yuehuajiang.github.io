<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yuehuajiang.github.io</id>
    <title>抗马拉硫磷的小菜蛾</title>
    <updated>2020-03-04T13:36:21.240Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yuehuajiang.github.io"/>
    <link rel="self" href="https://yuehuajiang.github.io/atom.xml"/>
    <subtitle>自是人生长恨水长东</subtitle>
    <logo>https://yuehuajiang.github.io/images/avatar.png</logo>
    <icon>https://yuehuajiang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 抗马拉硫磷的小菜蛾</rights>
    <entry>
        <title type="html"><![CDATA[ 纯萌新手把手教你从零开始搭建自己的博客]]></title>
        <id>https://yuehuajiang.github.io/post/chun-meng-xin-shou-ba-shou-jiao-ni-cong-ling-kai-shi-da-jian-zi-ji-de-bo-ke/</id>
        <link href="https://yuehuajiang.github.io/post/chun-meng-xin-shou-ba-shou-jiao-ni-cong-ling-kai-shi-da-jian-zi-ji-de-bo-ke/">
        </link>
        <updated>2020-03-04T10:42:01.000Z</updated>
        <content type="html"><![CDATA[<h2 id="方法一gridea推荐">方法一：Gridea(推荐)</h2>
<p>如果你是真的是像我一样的纯萌新，不是那种谦虚的大佬，那么不用想了，Gridea是你最好的选择。</p>
<p>不如先看看原作者的教程</p>
<p><a href="https://fehey.com/post/hve-notes-start/">https://fehey.com/post/hve-notes-start/</a></p>
<p>但是记得一点,CNAME如果没有,就不要写</p>
<p>如果不知道链接到哪里去了,就会找不到IP地址</p>
<p>如果这种事还是发生了,别着急,请参见方法二里的配置自定义域名并免费使用HTTPS</p>
<p>这里还有其他人的教程,在使用过程中可以参考</p>
<p><a href="https://sspai.com/post/54212">https://sspai.com/post/54212</a></p>
<p><a href="https://ak-ioi.blog.luogu.org/building-a-blog#">https://ak-ioi.blog.luogu.org/building-a-blog#</a></p>
<h2 id="方法二github-page">方法二:GitHub Page</h2>
<p>第二种方法就是自己搭建,不是很推荐萌新使用</p>
<p>不过你要是有一定的网络基础或者想完全按照自己的想法配置自己的博客,那么也未尝不可</p>
<p><a href="https://sspai.com/post/54608">https://sspai.com/post/54608</a></p>
<h2 id="博客搭建排雷">博客搭建排雷</h2>
<h3 id="雷区一更改了cname之后找不到博客的ip地址">雷区一:更改了CNAME之后找不到博客的IP地址</h3>
<p>CNAME如果没有,<strong>就不要写</strong>,因为你不知道会发生什么(没错,就是我)<br>
<img src="https://yuehuajiang.github.io/post-images/1583318554707.png" alt="" loading="lazy"></p>
<p>如果不知道链接到哪里去了,就会找不到IP地址</p>
<p>如果这种事还是发生了,别着急,请参见方法二里的配置自定义域名并免费使用HTTPS</p>
<p>你可以在阿里云或者腾讯云买一个域名解析(连接)到你的博客解决这个问题</p>
<h3 id="雷区二打不开评论区">雷区二:打不开评论区</h3>
<p>对不起,这个问题我也正在解决</p>
<h2 id="后记">后记</h2>
<p>都说每个程序员都应有自己的博客</p>
<p>现在</p>
<p>我有了,你呢?😊</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 纯萌新手把手教你从零开始配置虚拟机]]></title>
        <id>https://yuehuajiang.github.io/post/chun-meng-xin-shou-ba-shou-jiao-ni-cong-ling-pei-zhi-xu-ni-ji/</id>
        <link href="https://yuehuajiang.github.io/post/chun-meng-xin-shou-ba-shou-jiao-ni-cong-ling-pei-zhi-xu-ni-ji/">
        </link>
        <updated>2020-03-03T06:49:30.000Z</updated>
        <content type="html"><![CDATA[<h3 id="实验目的逆向分析平台搭建">实验目的：逆向分析平台搭建</h3>
<p>实验步骤：</p>
<p>（1）	下载虚拟机软件（如Vmware、VirtualBox等）并安装。（建议用免费的VirtualBox）</p>
<p>（2）	利用已安装的虚拟机软件，架设一台Windows XP虚拟机。</p>
<p>（3）	在WinXP虚拟机中下载安装Winhex或Ultraedit，然后测试是否能运行。</p>
<p>（4）	在WinXP虚拟机中下载安装OllyDbg，然后测试是否能运行。</p>
<p>（5）	在WinXP虚拟机中下载安装IDA Pro，然后测试是否能运行。</p>
<p>（6）	在WinXP虚拟机中下载安装WinDbg，然后测试是否能运行。</p>
<p>（7）	在WinXP虚拟机中下载安装PEiD，然后测试是否能运行。</p>
<p>（8）	在WinXP虚拟机中下载安装eXeScope，然后测试是否能运行。</p>
<p>（9）	关闭之前打开的应用程序，创建虚拟机快照。</p>
<h2 id="虚拟机装配过程">虚拟机装配过程</h2>
<h3 id="windows-xp镜像文件">Windows XP镜像文件</h3>
<p>想要装系统，必须得有镜像文件</p>
<p>新建文件夹（<strong>记住路径</strong>，一会装系统的时候还得用），将下载好的压缩包保存在里面（<strong>不用解压</strong>）</p>
<p>复制这段内容后打开百度网盘手机App，操作更方便哦</p>
<p>链接:<br>
<a href="https://pan.baidu.com/s/1DO0bKkYQI2zP0lX-MgvlUw">https://pan.baidu.com/s/1DO0bKkYQI2zP0lX-MgvlUw</a></p>
<p>提取码:017x</p>
<h3 id="vmware虚拟机装配过程">VMware虚拟机装配过程</h3>
<p><a href="https://blog.csdn.net/nicergj/article/details/83651603">https://blog.csdn.net/nicergj/article/details/83651603</a></p>
<h3 id="virtualbox虚拟机装配过程">VirtualBox虚拟机装配过程</h3>
<p><a href="http://www.soreatu.com/essay/Reverse%20Engineering%20Environment%20Setup.html">http://www.soreatu.com/essay/Reverse Engineering Environment Setup.html</a></p>
<h2 id="虚拟机装配排雷">虚拟机装配排雷</h2>
<p>关于具体怎么装配，大佬们在博客里已经说的很清楚了</p>
<p>下面由我来给大家肉身排雷</p>
<h3 id="virtualbox区">VirtualBox区</h3>
<h4 id="雷区一镜像文件">雷区一：镜像文件</h4>
<p>虚拟机想有系统，必然要有镜像文件</p>
<p>ISO文件下载好<strong>不用解压</strong>，<strong>记住路径</strong>，虚拟光盘导入</p>
<p><strong>路径里不要有中文</strong></p>
<h4 id="雷区二bios">雷区二：BIOS</h4>
<p>如果你启动虚拟机，闪退，然后弹出这个，那就是需要设置BIOS</p>
<figure data-type="image" tabindex="1"><img src="https://yuehuajiang.github.io/post-images/1583218211581.jpg" alt="" loading="lazy"></figure>
<p><strong>如何进入BIOS?</strong></p>
<p><a href="https://zhuanlan.zhihu.com/p/34223088">https://zhuanlan.zhihu.com/p/34223088</a></p>
<p>看这个，千万不要去彪手速，Win10有这个功能</p>
<p><strong>进到BIOS中要怎样设置呢？</strong></p>
<p><a href="https://blog.csdn.net/zyw0101/article/details/90699127">https://blog.csdn.net/zyw0101/article/details/90699127</a></p>
<p>看这个，进去之后可能和文章里写的不一样，可能会是英文，慢慢对照着找，别着急。</p>
<h4 id="雷区三不能上网">雷区三：不能上网</h4>
<p>如果是你的网卡有问题，可以安装驱动精灵</p>
<p>​			<a href="https://blog.csdn.net/zhaohansk/article/details/78246876">https://blog.csdn.net/zhaohansk/article/details/78246876</a></p>
<p>如果不是网卡的问题</p>
<figure data-type="image" tabindex="2"><img src="https://yuehuajiang.github.io/post-images/1583218226736.png" alt="" loading="lazy"></figure>
<p>选择NET(第一个)</p>
<p>如果不行，可以选择桥接网卡，但是我没有找到具体怎么设置。你可以自己上网去搜一搜。</p>
<p>别着急，很多人都有同样的问题，慢慢来</p>
<h4 id="雷区四显示连上网络了但是打不开浏览器">雷区四：显示连上网络了，但是打不开浏览器</h4>
<p>你可以换一个浏览器试试，IE现在很多网站不支持</p>
<p>重启一下电脑试试（主机和虚拟机）</p>
<p>如果还是不行（我现在就处于这个状态），也没关系，你可以下好了东西通过共享文件夹传到虚拟机里（共享文件夹上面的教程里都有）。</p>
<h3 id="vmware区">VMware区</h3>
<p>如果你在VirtualBox区已经把雷都排掉了，VMware可能用起来会更流畅</p>
<h4 id="雷区一没有权限">雷区一：没有权限</h4>
<p>​	右键，以管理员身份打开就行</p>
<h4 id="雷区二强制推出导致报错">雷区二：强制推出导致报错</h4>
<p>虽然VMware有VMtool可以直接拖动文件，但是如果卡了，<strong>千万不要</strong>任务管理器直接强制推出，多等一会</p>
<p>解决办法：（试试吧，虽然对我没什么效果，但是可能对你有用）</p>
<p><a href="https://www.sohu.com/a/330655347_609556">https://www.sohu.com/a/330655347_609556</a></p>
<h3 id="软件安装区">软件安装区</h3>
<h4 id="雷区一下载不到软件">雷区一：下载不到软件</h4>
<p>如果教程里的网址打不开，或者下载不下来</p>
<p>可以在这里下</p>
<p><a href="http://xiazai.zol.com.cn/">http://xiazai.zol.com.cn/</a></p>
<h4 id="雷区二版本">雷区二：版本</h4>
<p>有很多软件新版本不支持XP系统，记得去下老版本（比如IDA）</p>
<h2 id="后记">后记</h2>
<p>如果你一次性成功了，那么恭喜你；</p>
<p>如果你出现了雷区中的问题，那么希望我的文章能帮到你；</p>
<p>如果你出现了新的问题，请上网搜索，请询问你的老师和同学；</p>
<p>每解决一个问题，这都是你的财富，加油！💪</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[线性表的顺序储存结构和实现]]></title>
        <id>https://yuehuajiang.github.io/post/xian-xing-biao-de-shun-xu-chu-cun-jie-gou-he-shi-xian/</id>
        <link href="https://yuehuajiang.github.io/post/xian-xing-biao-de-shun-xu-chu-cun-jie-gou-he-shi-xian/">
        </link>
        <updated>2020-03-01T03:31:42.000Z</updated>
        <content type="html"><![CDATA[<h2 id="完整程序如果你比较懒就不用往下看了">完整程序(如果你比较懒就不用往下看了)</h2>
<p>DEV C++编译环境</p>
<pre><code class="language-c"> #include&lt;stdlib.h&gt;
 #include&lt;stdio.h&gt;
 typedef int ElemType;


//线性表的顺序定义
typedef struct seqList
{
	int n;
	int maxLength;
	ElemType *element;
 } SeqList;


//顺序表的初始化 
#define ERROR 0
#define OK 1
#define OverFlow 2//上溢 
#define UnderFlow 3//下溢 
#define NotPresent 4//元素不存在 
#define Duplicate 5//有重复元素 
typedef int Status;
Status Init (SeqList *L,int mSize)
{
	L-&gt;maxLength=mSize;
	L-&gt;n=0;
	L-&gt;element=(ElemType*)malloc(sizeof(ElemType)*mSize);//动态生成一维数组空间 
	if(!L-&gt;element)
		return ERROR;
	return OK; 
 } 
 
 
 //顺序表的查找
 Status Find(SeqList L,int i,ElemType *x)
 {
 	if(i&lt;0||i&gt;L.n-1)//判断元素下标i是否越界 
		return ERROR; 
	*x=L.element[i];//取出element[i]值通过参数x返回 
	return OK;
  } 
  
//顺序表的元素插入
Status Insert(SeqList*L,int i,ElemType x)
{
	int j;
	if(i&lt;-1||i&gt;L-&gt;n-1)//判断下标是否越界 
		return ERROR;
	if(L-&gt;n==L-&gt;maxLength)//判断顺序表存储空间是否已满 
		return ERROR;
	for(j=L-&gt;n-1;j&gt;i;j--)
		L-&gt;element[j+1]=L-&gt;element[j];//从前往后逐个后移元素
	L-&gt;element[j+1]=L-&gt;element[j];
	L-&gt;element[i+1]=x;
	L-&gt;n=L-&gt;n+1;
	return OK;
	 
 } 
Status Delete(SeqList *L,int i)
{
	int j;
	if(i&lt;0||i&gt;L-&gt;n-1)//下标i是否越界 
		return ERROR;
	if(!L-&gt;n)		//顺序表是否为空 
		return ERROR; 
	for(j=i+1;j&lt;L-&gt;n;j++)
		L-&gt;element[j-1]=L-&gt;element[j];//从前往后逐个前移元素 
	L-&gt;n--;			//表长减一 
	return OK;
}
 
 
 //顺序表的输出
 Status Output(SeqList *L)
 {
 	int i;
 	if(L-&gt;n==0)//判断顺序表是否为空 
 		return ERROR;
	for(i=0;i&lt;=L-&gt;n-1;i++)
		printf(&quot;%d&quot;,L-&gt;element [i]);
	printf(&quot;\n&quot;);
	return OK; 
  } 
 //顺序表的撤销
 void Destroy(SeqList *L)
 {
 	L-&gt;n=0;
 	L-&gt;maxLength=0;
 	free(L-&gt;element);
  } 
 //主函数
main()
{
	int i;
	SeqList list;
	
	Init(&amp;list,10);//初始化线性表 
	
	for(i=0;i&lt;10;i++)
		Insert(&amp;list,i-1,i);//线性表中插入新元素
	Output(&amp;list);
	
	Delete(&amp;list,0);
	Output(&amp;list); 
	Destroy(&amp;list);	
}
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://yuehuajiang.github.io/post-images/1583033551748.png" alt="" loading="lazy"></figure>
<p>正文开始</p>
<h2 id="线性表的顺序储存结构">线性表的顺序储存结构</h2>
<h4 id="线性表的顺序定义">线性表的顺序定义</h4>
<pre><code class="language-c">typedef struct seqList
{
	int n;//顺序表的长度
	int maxLength;//顺序表的最大允许长度
	ElemType *element;//顺序表的储存空间的首地址
 } SeqList;
</code></pre>
<p>ElemType是自定义类型，你可以通过 typedef int ElemType将其转化为int型或者转化为你需要的任意数据类型。</p>
<h2 id="顺序表基本运算的实现">顺序表基本运算的实现</h2>
<h4 id="顺序表的初始化">顺序表的初始化</h4>
<pre><code class="language-c">#define ERROR 0
#define OK 1
#define OverFlow 2//上溢 
#define UnderFlow 3//下溢 
#define NotPresent 4//元素不存在 
#define Duplicate 5//有重复元素 
typedef int Status;
Status Init (SeqList *L,int mSize)
{
	L-&gt;maxLength=mSize;
	L-&gt;n=0;
	L-&gt;element=(ElemType*)malloc(sizeof(ElemType)*mSize);//动态生成一维数组空间 
	if(!L-&gt;element)
		return ERROR;
	return OK; 
 } 
</code></pre>
<h4 id="顺序表的查找">顺序表的查找</h4>
<pre><code class="language-c"> Status Find(SeqList L,int i,ElemType *x)
 {
 	if(i&lt;0||i&gt;L.n-1)//判断元素下标i是否越界 
		return ERROR; 
	*x=L.element[i];//取出element[i]值通过参数x返回 
	return OK;
  }
</code></pre>
<h4 id="顺序表的元素插入">顺序表的元素插入</h4>
<pre><code class="language-c">Status Insert(SeqList*L,int i,ElemType x)
{
	int j;
	if(i&lt;-1||i&gt;L-&gt;n-1)//判断下标是否越界 
		return ERROR;
	if(L-&gt;n==L-&gt;maxLength)//判断顺序表存储空间是否已满 
		return ERROR;
	for(j=L-&gt;n-1;j&gt;i;j--)
		L-&gt;element[j+1]=L-&gt;element[j];//从前往后逐个后移元素
	L-&gt;element[j+1]=L-&gt;element[j];
	L-&gt;element[i+1]=x;
	L-&gt;n=L-&gt;n+1;
	return OK;
	 
 } 
</code></pre>
<h4 id="顺序表的元素删除">顺序表的元素删除</h4>
<pre><code class="language-c">Status Delete(SeqList *L,int i)
{
	int j;
	if(i&lt;0||i&gt;L-&gt;n-1)//下标i是否越界 
		return ERROR;
	if(!L-&gt;n)		//顺序表是否为空 
		return ERROR; 
	for(j=i+1;j&lt;L-&gt;n;j++)
		L-&gt;element[j-1]=L-&gt;element[j];//从前往后逐个前移元素 
	L-&gt;n--;			//表长减一 
	return OK;
}
</code></pre>
<h4 id="顺序表的输出">顺序表的输出</h4>
<pre><code class="language-c"> Status Output(SeqList *L)
 {
 	int i;
 	if(L-&gt;n==0)//判断顺序表是否为空 
 		return ERROR;
	for(i=0;i&lt;=L-&gt;n-1;i++)
		printf(&quot;%d&quot;,L-&gt;element [i]);
	printf(&quot;\n&quot;);
	return OK; 
  } 
</code></pre>
<h4 id="顺序表的撤销">顺序表的撤销</h4>
<pre><code class="language-c"> void Destroy(SeqList *L)
 {
 	L-&gt;n=0;
 	L-&gt;maxLength=0;
 	free(L-&gt;element);
  } 
</code></pre>
<h4 id=""></h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://yuehuajiang.github.io/post/hello-gridea/</id>
        <link href="https://yuehuajiang.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>