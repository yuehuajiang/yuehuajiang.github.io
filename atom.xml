<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yuehuajiang.github.io</id>
    <title>Gridea</title>
    <updated>2020-02-29T08:51:18.442Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yuehuajiang.github.io"/>
    <link rel="self" href="https://yuehuajiang.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://yuehuajiang.github.io/images/avatar.png</logo>
    <icon>https://yuehuajiang.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[顺序表课后习题]]></title>
        <id>https://yuehuajiang.github.io/post/shun-xu-biao-ke-hou-xi-ti/</id>
        <link href="https://yuehuajiang.github.io/post/shun-xu-biao-ke-hou-xi-ti/">
        </link>
        <updated>2020-02-29T08:46:07.000Z</updated>
        <content type="html"><![CDATA[<p>醉了，原本想着自己弄明白的，结果还是抄了别人的作业</p>
<p>算了，弄明白最重要</p>
<h3 id="一-请完成下列算法填空实现对顺序表逆置存储逆置存储是指将元素线性关系逆置后的顺序存储例如a0a1a2关系逆置后a2a1a0">一、请完成下列算法填空实现对顺序表逆置存储，逆置存储是指将元素线性关系逆置后的顺序存储，例如（a0,a1,a2），关系逆置后（a2,a1,a0).</h3>
<p>SeqList的结构体定义如下：</p>
<pre><code class="language-c">typedef struct seqList
{
    int n;
    int maxLength;
    ElemType *element;
}SeqList;
</code></pre>
<h3 id="题目">题目</h3>
<pre><code class="language-c">void Invert(SeqList *L) {
ElemType temp; int i; 
for ( i=0; i&lt;________; i++) { 
    temp =____________; 
    L-&gt;element[i] = L-&gt;element[___________]; 
    L-&gt;element[________] = ___________; }
}
</code></pre>
<h3 id="答案这个是我自己写的">答案(这个是我自己写的)</h3>
<p>题目给了中间变量，很可能是用到交换的法</p>
<pre><code class="language-c">void Invert(SeqList *L) {
ElemType temp; int i; 
for ( i=0; i&lt;n; i++)//从首尾向中间靠拢 
{ 
    temp =L-&gt;element[i]; 
    L-&gt;element[i] = L-&gt;element[n-i];//将首端和尾端的元素互换
    L-&gt;element[n-i] = temp; 
}

</code></pre>
<h3 id="二-请完成下列算法填空现对单链表的逆置存储逆置存储是指将元素线性关系逆置后的链表存储例如a0a1a2关系逆置后为a2a1a0">二、请完成下列算法填空现对单链表的逆置存储，逆置存储是指将元素线性关系逆置后的链表存储，例如（a0,a1,a2），关系逆置后为（a2,a1,a0).</h3>
<p>单链表结点Node和单链表SingleList结构体定义如下：</p>
<pre><code class="language-c">typedef struct node
{
     ElemType element;
     struct node *link;
}Node;

typedef struct singlelist
{
    Node *first;
    int n;
}SingleList;
</code></pre>
<h3 id="题目-2">题目</h3>
<pre><code class="language-c">void invert(SingleList *L) 
{ 
	Node *p=__________,*q; 
	L-&gt;first=NULL; 
	while (_____)
    { 
    	q=p-&gt;link; 
    	p-&gt;link=_______; 
    	L-&gt;first=_______; 
   		p=_______; 
    } 
}
</code></pre>
<h3 id="答案">答案</h3>
<pre><code class="language-c">void invert(SingleList *L) 
{ 
	Node *p=L-&gt;first,*q; 
	L-&gt;first=NULL; 
	while (p!=NULL)
    { 
    	q=p-&gt;link; 
    	p-&gt;link=L-&gt;first; 
    	L-&gt;first=p; 
   		p=q; 
    } 
}
</code></pre>
<img src="E:\大学\博文\图片\图一.jpg" style="zoom:15%;" />
<h3 id="三-完成下列算法填空将两个有序递增的带表头结点的单链表合并为一个有序递增的单链表">三、完成下列算法填空，将两个有序递增的带表头结点的单链表合并为一个有序递增的单链表。</h3>
<p>链表结点Node和链表SingleList结构体定义如下：</p>
<pre><code class="language-c">typedef struct node
{
     ElemType element;
     struct node *link;
}Node;

typedef struct headerlist
{
    Node *head;
    int n;
}HeaderList;
</code></pre>
<h3 id="题目-3">题目</h3>
<pre><code class="language-c">void MergeList1(HeaderList *La,HeaderList *Lb,HeaderList *Lc) { 
//合并链表La和Lb，合并后的新表使用头指针Lc指向 
Node *pa,*pb,*pc,*q;
pa=La-&gt;head-&gt;link; 
pb=Lb-&gt;head-&gt;link; 
pc=Lc-&gt;head; 
while(pa &amp;&amp; pb) {
     if(____________________) { 
           pc-&gt;link=pa; 
           pc=pa; 
           pa=pa-&gt;link; 
           La-&gt;n--; }
     else if(pa-&gt;element&gt;pb-&gt;element) { 
           pc-&gt;link=___________; 
           pc=________; 
           pb=_________;
           Lb-&gt;n--; } 
      else { 
           pc-&gt;link=pa; 
           pc=pa; 
           pa=_________; 
           q=_________; 
           free(pb); 
           pb =q; } 
Lc-&gt;n++; } 
pc-&gt;link=pa?pa:pb; //插入剩余段 Lc-&gt;n+=pa?La-&gt;n:Lb-&gt;n; 
}
</code></pre>
<h3 id="答案-2">答案</h3>
<pre><code class="language-c">void MergeList1(HeaderList *La,HeaderList *Lb,HeaderList *Lc) { 
//合并链表La和Lb，合并后的新表使用头指针Lc指向 
Node *pa,*pb,*pc,*q;
pa=La-&gt;head-&gt;link; 
pb=Lb-&gt;head-&gt;link; 
pc=Lc-&gt;head; 
while(pa &amp;&amp; pb) {
     if(pa-&gt;element&lt;pb-&gt;element) { 
           pc-&gt;link=pa;//把pa挂在pc上 
           pc=pa; 
           pa=pa-&gt;link;//往后 
           La-&gt;n--; }
     else if(pa-&gt;element&gt;pb-&gt;element) { 
           pc-&gt;link=pb; 
           pc=pb; 
           pb=pb-&gt;link;
           Lb-&gt;n--; } 
      else { 
           pc-&gt;link=pa; 
           pc=pa; 
           pa=pa-&gt;link; 
           q=pb-&gt;link; 
           free(pb); 
           pb =q; } 
Lc-&gt;n++; } 
pc-&gt;link=pa?pa:pb; //插入剩余段 Lc-&gt;n+=pa?La-&gt;n:Lb-&gt;n; 
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://yuehuajiang.github.io/post/hello-gridea/</id>
        <link href="https://yuehuajiang.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>